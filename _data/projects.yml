# Project template
- layout: left
  name: Facial Composites
  dates: May 2019 - July 2019
  quote: >
    Variational Auto-Encoders and Bayesian Optimization.
  description: >
    - Facial composites are widely used in forensics to generate images of suspects.
      Since the victim or witness usually isn’t good at drawing, computer-aided generation
      is applied to reconstruct the face attacker. One of the most commonly used techniques
      is evolutionary systems that compose the final face from many predefined parts.

    - In this project, I implement an app for creating a facial composite that will be able
      to construct desired faces without explicitly providing databases of templates.
      I apply Variational Autoencoders, Gaussian processes, and Bayesian Optimization
      for this task.

    - **Skills Applied**: Bayesian Modelling, Bayesian Optimization, Gaussian Processes,
      Variational Auto Encoder, Variational Inference, Convolutional Neural Networks.

    - **Frameworks Used**: TensorFlow 1.x, NumPy, SciPy, matplotlib, GPy, GPyOpt

    - [See the Project Here](https://github.com/tirthasheshpatel/tirthasheshpatel.github.io/tree/master/MyProjects/Facial%20Composites.ipynb)

- layout: left
  name: Image Captioning
  dates: April 2019 - May 2019
  quote: >
    LSTMs and Convolutional Neural Networks!
  description: >
    - I have used TensorFlow’s pretrained InceptionNet as a encoder network and dynamic
    stacked LSTM as a decoder network. All the images provided as input are converted
    to vectors of a fixed length and this vectors are a input to the one-to-many LSTM
    that outputs a english caption for the image.

    - I have used finetuning using Keras for the task for about 30 epochs. It produces
    reasonable captions while testing on internet images. You can also test an image by
    uploading it to the internet and running the last couple of cells of the notebook.

    - **Skills Applied**: Convolutional Neural Networks, Long Short Term Memory, NLP, Image
      Preprocessing

    - **Frameworks used**: TensorFlow 1.x, NumPy, SciPy, scikit-learn

    - [See the Project Here](https://github.com/tirthasheshpatel/tirthasheshpatel.github.io/tree/master/MyProjects/Image%20Captioning.ipynb)

- layout: left
  name: Handwritten Digits Generator
  dates: January 2019 - February 2019
  quote: >
    GANs and VAEs are just awesome!
  description: >
    - I trained a Variational Auto Encoder from scratch for 100 epochs on a training
      set of 60,000 images and 3 and 30 dimensional latent space. The generator generated
      very clear fake handwritten images.

    - **Skills Applied**: Convolutional Neural Networks, Image Preprocessing, Bayesian
      Modelling, Variational Auto Encoders

    - **Frameworks used**: TensorFlow 1.x, NumPy, SciPy, matplotlib

    - [See the Project Here](https://github.com/tirthasheshpatel/tirthasheshpatel.github.io/blob/master/MyProjects/Variational%20Auto%20Encoder%20on%20MNIST.ipynb)
